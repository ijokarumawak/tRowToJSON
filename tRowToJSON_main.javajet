<%@ jet 
  imports="
      java.util.List
      java.util.Map
      org.talend.core.model.metadata.IMetadataColumn
      org.talend.core.model.metadata.IMetadataTable
      org.talend.core.model.process.EConnectionType
      org.talend.core.model.process.ElementParameterParser
      org.talend.core.model.process.IConnection
      org.talend.core.model.process.IConnectionCategory
      org.talend.core.model.process.INode
      org.talend.designer.codegen.config.CodeGeneratorArgument
      org.talend.core.model.metadata.types.JavaTypesManager
  "
%>
<%
  CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
  INode node = (INode)codeGenArgument.getArgument();
  String cid = node.getUniqueName();
  List<Map<String, String>> jsonFields = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__JSON_FIELDS__");
  String jsonColumn = ElementParameterParser.getValue(node, "__JSON_COLUMN__");
  IConnection inMainCon = null;
  List<? extends IConnection> connsIn = node.getIncomingConnections(EConnectionType.FLOW_MAIN);
  
  if (connsIn == null || connsIn.size() == 0 ){
    return "";
  } else{
    inMainCon = connsIn.get(0);
  }   
  IConnection outConn = null;
  List< ? extends IConnection> outConns = node.getOutgoingSortedConnections();
  
  if (outConns == null || outConns.size() == 0 ){
    return "";
  } else{
  	for(int i=0; i<outConns.size(); i++){
  		IConnection connTemp = outConns.get(i);
	    if (connTemp.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
	    	outConn = connTemp;
	    	break;
	    }
  	}
  } 
  
  String outconnName = outConn.getName();
  String preconnName = inMainCon.getName(); 
  String rejectConnName = null; 
  
  IMetadataTable preMetadata = inMainCon.getMetadataTable(); 
  List<IMetadataColumn> preColumns = preMetadata.getListColumns();   
  List<IMetadataTable> metadatas = node.getMetadataList();
  IMetadataTable metadata = metadatas.get(0);
  List<IMetadataColumn> columns = metadata.getListColumns();
  
  %>
  <%=outconnName %> = new <%=outconnName %>Struct();
  <%  
  
    for (IMetadataColumn col : columns){//col:columns  
      String outLabel = col.getLabel();
      String outPattern = col.getPattern();
      if(jsonColumn.equals(outLabel)){ %>
		org.codehaus.jettison.json.JSONObject json = new org.codehaus.jettison.json.JSONObject();
		<%
		for(Map<String, String> jsonField : jsonFields) {
		    String jsonFieldName = (String)jsonField.get("JSON_FIELD");
		    String inputColumn = (String)jsonField.get("INPUT_COLUMN");
		    if(jsonFieldName == null || jsonFieldName.length() == 0) {
		        jsonFieldName = "\"" + inputColumn + "\"";
		    }
		%>
            // {JSON_FIELD=, INPUT_COLUMN=}
    	    json.put(<%=jsonFieldName %>, <%=preconnName %>.<%=inputColumn %>);
		<%
		}
        %>
        <%=outconnName %>.<%=outLabel %> = json.toString();
      <% } else { %>
        <%=outconnName %>.<%=outLabel %> = <%=preconnName %>.<%=outLabel %>;
      <% } %>
  <%
    }//col:columns
  %>
  
nb_line_<%=cid%>++;
  